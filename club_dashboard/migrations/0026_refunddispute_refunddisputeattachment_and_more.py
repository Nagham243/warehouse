# Generated by Django 4.2.15 on 2025-06-19 16:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('students', '0029_alter_servicesmodel_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('club_dashboard', '0025_commission_vendorcommissionassignment'),
    ]

    operations = [
        migrations.CreateModel(
            name='RefundDispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(help_text='Detailed description of the issue')),
                ('refund_type', models.CharField(choices=[('full', 'Full Refund'), ('partial', 'Partial Refund')], default='full', max_length=20)),
                ('dispute_type', models.CharField(choices=[('quality', 'Quality Issue'), ('service_not_provided', 'Service Not Provided'), ('delivery_delay', 'Delivery Delay'), ('wrong_item', 'Wrong Item/Service'), ('damage', 'Damaged Item'), ('billing_error', 'Billing Error'), ('other', 'Other')], default='other', max_length=30)),
                ('original_amount', models.DecimalField(decimal_places=2, help_text='Original deal amount', max_digits=10)),
                ('requested_refund_amount', models.DecimalField(decimal_places=2, help_text='Amount requested for refund', max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=10)),
                ('approved_refund_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Final approved refund amount', max_digits=10, null=True)),
                ('vendor_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of refund amount vendor will receive', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('client_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of refund amount client will receive', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('vendor_refund_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount vendor will receive', max_digits=10, null=True)),
                ('client_refund_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount client will receive', max_digits=10, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('investigating', 'Under Investigation'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('resolved', 'Resolved'), ('canceled', 'Canceled')], default='pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Final resolution explanation', null=True)),
                ('client_evidence', models.JSONField(blank=True, help_text='Client submitted evidence (file URLs, screenshots, etc.)', null=True)),
                ('vendor_response', models.TextField(blank=True, help_text='Vendor response to the dispute', null=True)),
                ('vendor_evidence', models.JSONField(blank=True, help_text='Vendor submitted evidence (file URLs, screenshots, etc.)', null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_investigation', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_refund_disputes', to=settings.AUTH_USER_MODEL)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_disputes', to='students.order')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_refund_disputes', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_refund_disputes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Refund & Dispute',
                'verbose_name_plural': 'Refunds & Disputes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RefundDisputeAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Evidence files, screenshots, documents, etc.', upload_to='refund_disputes/attachments/')),
                ('description', models.CharField(blank=True, help_text='Description of the attachment', max_length=200)),
                ('file_type', models.CharField(choices=[('image', 'Image'), ('document', 'Document'), ('video', 'Video'), ('other', 'Other')], default='other', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('refund_dispute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='club_dashboard.refunddispute')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_dispute_attachments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Refund Dispute Attachment',
                'verbose_name_plural': 'Refund Dispute Attachments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='refunddispute',
            index=models.Index(fields=['status', 'created_at'], name='club_dashbo_status_d3e053_idx'),
        ),
        migrations.AddIndex(
            model_name='refunddispute',
            index=models.Index(fields=['deal', 'status'], name='club_dashbo_deal_id_52e775_idx'),
        ),
        migrations.AddIndex(
            model_name='refunddispute',
            index=models.Index(fields=['client', 'status'], name='club_dashbo_client__51e1d0_idx'),
        ),
        migrations.AddIndex(
            model_name='refunddispute',
            index=models.Index(fields=['vendor', 'status'], name='club_dashbo_vendor__67cde3_idx'),
        ),
    ]
